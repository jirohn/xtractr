<?php
use Drupal\node\Entity\Node;
use Drupal\node\Entity\NodeType;
use Drupal\field\Entity\FieldStorageConfig;
use Drupal\field\Entity\FieldConfig;
use Drupal\Core\Entity\Entity\EntityFormDisplay;
use Drupal\Core\Entity\Entity\EntityViewDisplay;

/**
 * Implementa hook_install().
 */
function xtractr_install() {
    createContentTypeAndFields();
    configureFieldDisplays();
}

function createContentTypeAndFields() {
    // Crear el tipo de contenido 'telefono' si no existe.
    if (!NodeType::load('telefono')) {
        $tipo_telefono = NodeType::create(['type' => 'telefono', 'name' => 'Teléfono']);
        $tipo_telefono->save();
    }

    // Crear el tipo de contenido 'pagina_de_extraccion' si no existe.
    if (!NodeType::load('pagina_de_extraccion')) {
        $tipo_pagina_de_extraccion = NodeType::create(['type' => 'pagina_de_extraccion', 'name' => 'Página de Extracción']);
        $tipo_pagina_de_extraccion->save();
    }
    // creamos el tipo de contenido 'clientes' si no existe.
    if (!NodeType::load('clientes')) {
        $tipo_clientes = NodeType::create(['type' => 'clientes', 'name' => 'Clientes']);
        $tipo_clientes->save();
    }
    if (!NodeType::load('mensajes')) {
        $tipo_mensajes = NodeType::create(['type' => 'mensajes', 'name' => 'Mensajes']);
        $tipo_mensajes->save();
    }
    // Crear y configurar campos para 'mensajes'.
    createAndConfigureField('field_mensaje', 'node', 'mensajes', 'text_long', 'Mensaje');
    // Crear y configurar campos.
    createAndConfigureField('field_telefono', 'node', 'telefono', 'string', 'Número de Teléfono');
    createAndConfigureField('field_enviado', 'node', 'telefono', 'boolean', 'Enviado');
    createAndConfigureField('field_urlextract', 'node', 'pagina_de_extraccion', 'string', 'URL de Extracción');
    //el tipo de contenido clientes tiene los siguientes campos: nombre, edad, ciudad, telefono, email(opcional), tipo de tarifa (texto), fecha de contratacion, observaciones(opcional)
    createAndConfigureField('field_nombre', 'node', 'clientes', 'string', 'Nombre');
    createAndConfigureField('field_edad', 'node', 'clientes', 'integer', 'Edad');
    createAndConfigureField('field_ciudad', 'node', 'clientes', 'string', 'Ciudad');
    createAndConfigureField('field_telefono', 'node', 'clientes', 'string', 'Telefono');
    createAndConfigureField('field_email', 'node', 'clientes', 'string', 'Email');
    createAndConfigureField('field_tipo_tarifa', 'node', 'clientes', 'string', 'Tipo de Tarifa');
    createAndConfigureField('field_fecha_contratacion', 'node', 'clientes', 'datetime', 'Fecha de Contratacion');
    createAndConfigureField('field_observaciones', 'node', 'clientes', 'string', 'Observaciones');

}

function createAndConfigureField($field_name, $entity_type, $bundle, $field_type, $label) {
    if (!FieldStorageConfig::loadByName($entity_type, $field_name)) {
        $field_storage = FieldStorageConfig::create([
            'field_name' => $field_name,
            'entity_type' => $entity_type,
            'type' => $field_type,
        ]);
        $field_storage->save();

        $field = FieldConfig::create([
            'field_storage' => $field_storage,
            'bundle' => $bundle,
            'label' => $label,
        ]);
        $field->save();
    }
}

function configureFieldDisplays() {
     // Configurar el campo 'Mensaje' del tipo de contenido 'Mensajes'.
     configureFieldDisplay('mensajes', 'field_mensaje', 'text_textarea_with_summary', 'text_default');
    configureFieldDisplay('telefono', 'field_telefono', 'string_textfield', 'string');
    configureFieldDisplay('telefono', 'field_enviado', 'boolean_checkbox', 'boolean');
    configureFieldDisplay('pagina_de_extraccion', 'field_urlextract', 'string_textfield', 'string');
    // configuramos los displays del tipo de contenido clientes
    configureFieldDisplay('clientes', 'field_nombre', 'string_textfield', 'string');
    configureFieldDisplay('clientes', 'field_edad', 'number', 'number_integer');
    configureFieldDisplay('clientes', 'field_ciudad', 'string_textfield', 'string');
    configureFieldDisplay('clientes', 'field_telefono', 'string_textfield', 'string');
    configureFieldDisplay('clientes', 'field_email', 'string_textfield', 'string');
    configureFieldDisplay('clientes', 'field_tipo_tarifa', 'string_textfield', 'string');
    configureFieldDisplay('clientes', 'field_fecha_contratacion', 'datetime_default', 'datetime_default');
    configureFieldDisplay('clientes', 'field_observaciones', 'string_textarea', 'string');

}

function configureFieldDisplay($bundle, $field_name, $form_display_type, $view_display_type) {
    // Configurar el formulario de visualización para el campo.
    $form_display = EntityFormDisplay::load("node.{$bundle}.default");
    if (!$form_display) {
        $form_display = EntityFormDisplay::create([
            'targetEntityType' => 'node',
            'bundle' => $bundle,
            'mode' => 'default',
            'status' => TRUE,
        ]);
    }
    $form_display->setComponent($field_name, ['type' => $form_display_type])->save();

    // Configurar la visualización del contenido para el campo.
    $view_display = EntityViewDisplay::load("node.{$bundle}.default");
    if (!$view_display) {
        $view_display = EntityViewDisplay::create([
            'targetEntityType' => 'node',
            'bundle' => $bundle,
            'mode' => 'default',
            'status' => TRUE,
        ]);
    }
    $view_display->setComponent($field_name, ['type' => $view_display_type])->save();
}
/**
 * Implements hook_uninstall().
 */
function xtractr_uninstall() {
    // Eliminar todos los nodos de los tipos de contenido creados por el módulo.
$types = ['telefono', 'pagina_de_extraccion', 'clientes', 'mensajes'];
    foreach ($types as $type) {
        $nids = \Drupal::entityQuery('node')->condition('type', $type)->accessCheck(FALSE)->execute();
        $nodes = Node::loadMultiple($nids);
        foreach ($nodes as $node) {
            $node->delete();
        }

        // Eliminar el tipo de contenido.
        if ($content_type = NodeType::load($type)) {
            $content_type->delete();
        }
    }

    // Definir todos los campos a eliminar.
    $fields_to_delete = [
        'node.telefono.field_mensaje',
        'node.telefono.field_telefono', 
        'node.telefono.field_enviado', 
        'node.pagina_de_extraccion.field_urlextract',
        'node.clientes.field_nombre', 
        'node.clientes.field_edad', 
        'node.clientes.field_ciudad', 
        'node.clientes.field_telefono',
        'node.clientes.field_email', 
        'node.clientes.field_tipo_tarifa',
        'node.clientes.field_fecha_contratacion',
        'node.clientes.field_observaciones',
        // Agregar aquí otros campos que hayas creado.
    ];

    // Eliminar los campos y sus almacenamientos.
    foreach ($fields_to_delete as $field_name) {
        list($entity_type, $bundle, $field) = explode('.', $field_name);
        if ($field_config = FieldConfig::loadByName($entity_type, $bundle, $field)) {
            $field_config->delete();
        }
        if ($field_storage = FieldStorageConfig::loadByName($entity_type, $field)) {
            $field_storage->delete();
        }
    }
}
